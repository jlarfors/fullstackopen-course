{"version":3,"sources":["components/Notification.js","components/SearchFilter.js","components/Person.js","components/Numbers.js","components/Phonebook.js","services/persons.js","components/App.js","index.js"],"names":["Notification","notification","styleClass","status","className","message","SearchFilter","handleFilterChange","filterName","onChange","value","Person","person","deletePhonebookEntry","name","number","onClick","Numbers","persons","personList","filter","toUpperCase","includes","map","index","key","Phonebook","newPerson","handleInputChange","addPhonebookEntry","onSubmit","type","baseUrl","axios","get","post","id","put","delete","App","useState","setPersons","setNewPerson","setFilterName","setNotification","useEffect","personService","then","response","data","console","log","event","target","copy","preventDefault","find","window","confirm","it","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0ff8e47.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({notification}) => {\n    if (!notification) {\n        return null\n    }\n    const styleClass = (notification.status === \"success\") ? \"success-notification\" : \"error-notification\"\n    return (\n        <div className={styleClass}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","\nimport React, { } from 'react'\n\nconst SearchFilter = ({ handleFilterChange, filterName }) => (\n  <div>\n    <h2>Filter</h2>\n    <div>\n      filter shown with: <input onChange={handleFilterChange} value={filterName} />\n    </div>\n  </div>\n)\n\nexport default SearchFilter\n","import React from 'react'\n\nconst Person = ({ person, deletePhonebookEntry }) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.number}</td>\n    <td><button onClick={() => deletePhonebookEntry(person)}>Delete</button></td>\n  </tr>\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Numbers = ({ persons, filterName, deletePhonebookEntry }) => {\n  const isSearchMatch = (name, filter) => {\n    return (!filter || name.toUpperCase().includes(filter.toUpperCase()))\n  }\n\n  const personList = persons\n    .filter(person => !filterName || isSearchMatch(person.name, filterName))\n    // .filter(person => true)\n    .map((person, index) => <Person key={index} person={person} deletePhonebookEntry={deletePhonebookEntry} />)\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <table>\n        <tbody>\n          <tr>\n            <th>Name</th>\n            <th>Number</th>\n          </tr>\n          {personList}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Numbers","\nimport React from 'react'\nimport Notification from './Notification'\nimport SearchFilter from './SearchFilter'\nimport Numbers from './Numbers'\n\nconst Phonebook = ({\n  persons,\n  newPerson,\n  filterName,\n  handleFilterChange,\n  handleInputChange,\n  addPhonebookEntry,\n  deletePhonebookEntry,\n  notification\n  }) => {\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <SearchFilter handleFilterChange={handleFilterChange} filterName={filterName} />\n\n      <h2>Add New Person</h2>\n      <form onSubmit={addPhonebookEntry}>\n        <div>\n          name: <input name=\"name\" onChange={handleInputChange} value={newPerson.name} />\n        </div>\n        <div>\n          number: <input name=\"number\" onChange={handleInputChange} value={newPerson.number} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <Numbers persons={persons} filterName={filterName} deletePhonebookEntry={deletePhonebookEntry} />\n    </div>\n  )\n}\n\nexport default Phonebook\n","import axios from 'axios'\n\nconst baseUrl = \"http://localhost:3001/api/persons\"\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = (newPerson) => {\n    return axios.post(baseUrl, newPerson)\n}\n\nconst update = (id, person) => {\n    return axios.put(`${baseUrl}/${id}`, person)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n    getAll: getAll,\n    create: create,\n    update: update,\n    deletePerson: deletePerson\n}\n","\nimport React, { useState, useEffect } from 'react'\nimport Phonebook from './Phonebook'\nimport personService from '../services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newPerson, setNewPerson] = useState({ name: '', number: '' })\n  const [filterName, setFilterName] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  const handleInputChange = (event) => {\n    const target = event.target\n    const copy = { ...newPerson }\n    copy[target.name] = target.value\n    setNewPerson(copy)\n  }\n\n  const addPhonebookEntry = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newPerson.name)\n    if (person) {\n      const result = window.confirm(`${newPerson.name} already exists. Replace the old number with the new one?`)\n      // alert(`${newPerson.name} is already added to the phonebook`)\n      if (result) {\n        personService\n          .update(person.id, newPerson)\n          .then(response => {\n            setPersons(persons.map(it => it.id === person.id ? response.data : it))\n            setNotification({\"message\" : `${person.name} successfully updated`, \"status\" : \"success\"})\n            setTimeout(() => {\n              setNotification(null)\n            }, 2000)\n          })\n          .catch(error => {\n            console.log(error)\n            setNotification({\"message\" : `${newPerson.name} could not be updated`, \"status\" : \"error\"})\n            setTimeout(() => {\n              setNotification(null)\n            }, 2000)\n            setPersons(persons.filter(it => it.id !== person.id))\n          })\n      }\n    } else {\n      personService\n        .create(newPerson)\n        .then(response => {\n          console.log(response.data)\n          setPersons(persons.concat(response.data))\n          setNotification({\"message\" : `${newPerson.name} successfully added`, \"status\" : \"success\"})\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n        })\n    }\n  }\n\n  const setInitialPersons = () => {\n    personService\n      .getAll()\n      .then(response => {\n        const persons = response.data\n        console.log(persons)\n        setPersons(persons)\n      })\n  }\n\n  const deletePhonebookEntry = (person) => {\n    const result = window.confirm(`Delete ${person.name}?`)\n    if (result) {\n      personService\n        .deletePerson(person.id)\n        .then(response => {\n          console.log(response)\n          setPersons(persons.filter(it => it.name !== person.name))\n          setNotification({\"message\" : `${person.name} successfully deleted`, \"status\" : \"success\"})\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n        })\n        .catch(error => {\n          console.log(error)\n          setNotification({\"message\" : `${newPerson.name} could not be deleted`, \"status\" : \"error\"})\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n        })\n    }\n  }\n\n  useEffect(setInitialPersons, [])\n\n  return (\n    <div>\n      <Phonebook\n        persons={persons}\n        newPerson={newPerson}\n        filterName={filterName}\n        handleFilterChange={handleFilterChange}\n        handleInputChange={handleInputChange}\n        addPhonebookEntry={addPhonebookEntry}\n        deletePhonebookEntry={deletePhonebookEntry}\n        notification={notification}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}